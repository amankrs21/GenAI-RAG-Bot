name: CI/CD Pipeline for GenAI-RAG-Bot

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # 1. SonarQube Analysis Job
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=amankrs21_GenAI-RAG-Bot
            -Dsonar.organization=amankrs21
          projectBaseDir: .


  # 2. Express App Hosting Job (depends on SonarCloud success, but only runs on push to `main`)
  fastapi-build:
    name: FASTAPI Build
    runs-on: ubuntu-latest
    needs: sonarqube
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: ./server

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/


  # 3. Deploy to Azure Web App (depends on Express app deployment success)
  fastapi-deployment:
    name: FASTAPI Deployment
    runs-on: ubuntu-latest
    needs: fastapi-build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7A5985D86EEE476291DFC6D8C5865454 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F0598E5D29A342EDA95AA57647DE0B56 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C36BFD9C36B94694BC5DEC6EE7742A4E }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'botairag'
          slot-name: 'Production'
          package: ./server
